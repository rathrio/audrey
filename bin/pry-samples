#!/usr/bin/env ruby

require 'pry'
require 'redis'
require 'oj'

class Sample
  attr_reader :identifier, :meta_object, :value, :root_node_id, :category,
    :source_line, :source_index, :source_length, :source, :identifier_index,
    :frame_id

  def initialize(hash)
    @identifier = hash['identifier']
    @identifier_index = hash['identifierIndex']
    @meta_object = hash.fetch('metaObject')
    @value = hash.fetch('value')
    @root_node_id = hash.fetch('rootNodeId')
    @category = hash.fetch('category')
    @source = hash.fetch('source')
    @source_line = hash.fetch('sourceLine')
    @source_index = hash.fetch('sourceIndex')
    @source_length = hash.fetch('sourceLength')
    @frame_id = hash.fetch('frameId')
    freeze
  end

  def argument?
    category == 'ARGUMENT'
  end

  def return?
    category == 'RETURN'
  end
end

project_id = ARGV.first || 'default'
samples_key = "audrey:#{project_id}:samples"

redis = Redis.new(driver: :hiredis)
samples = redis
  .smembers(samples_key)
  .map { |sample_json| Sample.new(Oj.load(sample_json)) }

require 'pry'; binding.pry
puts 'Goodbye'
